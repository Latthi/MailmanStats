# automatically generated by generate_docs.py.
doc="""Attributes supported by this class are:
cluster_sep(type:number) default=0.
    The separation between clustered boxes. The unit is points.
    
y_qerror_minus_col(type:int) default=None.
    The depth of the "quartile" errorbar is extracted from this
    column in data. This attribute is meaningful only when
    error_bar != None.
    
direction(type:str) default="vertical".
    The direction the bars grow. Either 'horizontal' or 'vertical'.
    
error_bar(type:error_bar.Base) default=None.
    The style of the error bar. See also pychart.error_bar
    
data_label_format(type:printf format string) default=None.
    The format string for the label displayed besides each bar.  It
    can be a `printf' style format string, or a two-parameter
    function that takes (x,y) values and returns a string. The
    appearance of the string produced here can be controlled using
    escape sequences. See also pychart.font
    
cluster(type:tuple) default=(0, 1).
    This attribute is used to cluster multiple bar plots in a
    single chart.  The value should be a tuple of two integers. The
    second value should be equal to the total number of bar plots
    in the chart. The first value should be the relative position
    of this chart; 0 places this chart the leftmost, and N-1 (where
    N is the 2nd value of this attribute) places this chart the
    rightmost. Consider the below example:
    
             a = area.T(...)
             p1 = bar_plot.T(data = [[1,20][2,30]], cluster=(0,2))
             p2 = bar_plot.T(data = [[1,25],[2,10]], cluster=(1,2))
             a.add_plot(p1, p2)
             a.draw()
    
       In this example, one group of bars will be drawn
    side-by-side at position x=1, one with height 20, the other
    with height 25. The other two bars will be drawn side by side
    at position x=2, one with height 30 and the other with height
    10.
    
bcol(type:int) default=0.
    Base (i.e., X when DIRECTION is vertical, Y otherwise) value of
    each bar is extracted this column in data. The combination of
    data, bcol, and hcol attributes defines the sample points to be
    displayed by this chart. See the below example:
    
                       d = [[5,10], [7,22], [8,25]]
                       p = bar_plot.T(data = d, bcol = 1, hcol = 2)
    
       Here, three bars will be drawn. The X values of the bars
    will be 5, 7, and 8. The Y values of the bars will be 10, 22,
    and 25, respectively. (In practice, because the values of bcol
    and hcol defaults to 1 and 2, you can write the above example
    just as "p = bar_plot.T(data = d)".
    
y_error_plus_col(type:int) default=None.
    The depth of the errorbar is extracted from this column in
    data. This attribute is meaningful only when error_bar != None.
    
fill_style(type:fill_style.T) default:Pick next fill style from standard styles. @xref{fill_style}.    Fill style of each box.
    
width(type:number) default=5.
    Width of each box.
    
hcol(type:int) default=1.
    Height of each bar is extracted this column in data.  See also
    the description of the 'bcol' attribute.
    
y_qerror_plus_col(type:int) default=None.
    The depth of the "quartile" errorbar is extracted from this
    column in data. This attribute is meaningful only when
    error_bar != None.
    
y_error_minus_col(type:int) default=None.
    The depth of the errorbar is extracted from this column in
    data. This attribute is meaningful only when error_bar != None.
    
stack_on(type:any) default=None.
    The value must be either None or bar_plot.T. If non-None, bars
    of this plot are stacked on top of another bar plot.
    
line_style(type:line_style.T) default=default.
    The style of the outer frame of each box.
    
label(type:str) default="???".
    The label to be displayed in the legend. See also
    pychart.legend, See also pychart.font
    
data(type:any) default=None.
    Specifies the data points. See also pychart.chart_data
    
data_label_offset(type:(x,y)) default=(0, 5).
    Location of data label relative to the sample point. See also
    attribute data_label_format.
    
"""

